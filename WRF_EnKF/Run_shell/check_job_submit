
In job_submit.sh line 4:
. $CONFIG_FILE
  ^----------^ SC1090: ShellCheck can't follow non-constant source. Use a directive to specify location.
  ^----------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
. "$CONFIG_FILE"


In job_submit.sh line 13:
  ibrun -n $n -o $o $exe
           ^-- SC2086: Double quote to prevent globbing and word splitting.
                 ^-- SC2086: Double quote to prevent globbing and word splitting.
                    ^--^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
  ibrun -n "$n" -o "$o" "$exe"


In job_submit.sh line 14:
  export SLURM_TASKS_PER_NODE="$((SLURM_NTASKS/$SLURM_NNODES))(x$SLURM_NNODES)"
                                               ^-----------^ SC2004: $/${} is unnecessary on arithmetic variables.


In job_submit.sh line 19:
  if [ $JOB_SUBMIT_MODE == 1 ]; then
       ^--------------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
  if [ "$JOB_SUBMIT_MODE" == 1 ]; then


In job_submit.sh line 20:
  nn=$((($n+$n%$ppn)/$ppn))   #number of nodes used for job = ceiling(n/ppn)
         ^-- SC2004: $/${} is unnecessary on arithmetic variables.
            ^-- SC2004: $/${} is unnecessary on arithmetic variables.
               ^--^ SC2004: $/${} is unnecessary on arithmetic variables.
                     ^--^ SC2004: $/${} is unnecessary on arithmetic variables.


In job_submit.sh line 22:
  for i in `seq 1 $nn`; do 
           ^---------^ SC2006: Use $(...) notation instead of legacy backticked `...`.

Did you mean: 
  for i in $(seq 1 $nn); do 


In job_submit.sh line 23:
    cat $PBS_NODEFILE |head -n$((HOSTPPN*($nn*$o/$n+$i))) |tail -n$ppn >> nodefile
        ^-----------^ SC2086: Double quote to prevent globbing and word splitting.
        ^-----------^ SC2002: Useless cat. Consider 'cmd < file | ..' or 'cmd file | ..' instead.
                                          ^-^ SC2004: $/${} is unnecessary on arithmetic variables.
                                              ^-- SC2004: $/${} is unnecessary on arithmetic variables.
                                                 ^-- SC2004: $/${} is unnecessary on arithmetic variables.
                                                    ^-- SC2004: $/${} is unnecessary on arithmetic variables.
                                                                  ^--^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
    cat "$PBS_NODEFILE" |head -n$((HOSTPPN*($nn*$o/$n+$i))) |tail -n"$ppn" >> nodefile


In job_submit.sh line 25:
  mpiexec.mpirun_rsh -np $n -machinefile nodefile OMP_NUM_THREADS=1 $exe
                         ^-- SC2086: Double quote to prevent globbing and word splitting.
                                                                    ^--^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
  mpiexec.mpirun_rsh -np "$n" -machinefile nodefile OMP_NUM_THREADS=1 "$exe"


In job_submit.sh line 28:
  elif [ $JOB_SUBMIT_MODE == 2 ]; then
         ^--------------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
  elif [ "$JOB_SUBMIT_MODE" == 2 ]; then


In job_submit.sh line 30:
    nodes=`echo "($n+$ppn)/$ppn" |bc`
          ^-------------------------^ SC2006: Use $(...) notation instead of legacy backticked `...`.

Did you mean: 
    nodes=$(echo "($n+$ppn)/$ppn" |bc)


In job_submit.sh line 31:
    jobname=`basename $exe |awk -F. '{print $1}'`
            ^-- SC2006: Use $(...) notation instead of legacy backticked `...`.
                      ^--^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
    jobname=$(basename "$exe" |awk -F. '{print $1}')


In job_submit.sh line 32:
    if [[ $jobname == "wrf" ]] && [[ $wrf_for == "forecast" ]]; then
                                     ^------^ SC2154: wrf_for is referenced but not assigned.


In job_submit.sh line 34:
    cat << EOF > run_$jobname.sh
                     ^------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
    cat << EOF > run_"$jobname".sh


In job_submit.sh line 44:
cd `pwd`
   ^---^ SC2006: Use $(...) notation instead of legacy backticked `...`.

Did you mean: 
cd $(pwd)


In job_submit.sh line 48:
    cat << EOF > run_$jobname.sh
                     ^------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
    cat << EOF > run_"$jobname".sh


In job_submit.sh line 58:
cd `pwd`
   ^---^ SC2006: Use $(...) notation instead of legacy backticked `...`.

Did you mean: 
cd $(pwd)


In job_submit.sh line 62:
    sbatch run_$jobname.sh >& job_submit.log
               ^------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
    sbatch run_"$jobname".sh >& job_submit.log


In job_submit.sh line 64:
    jobid=`cat job_submit.log |awk -F. '{print $1}'`
          ^-- SC2006: Use $(...) notation instead of legacy backticked `...`.
               ^------------^ SC2002: Useless cat. Consider 'cmd < file | ..' or 'cmd file | ..' instead.

Did you mean: 
    jobid=$(cat job_submit.log |awk -F. '{print $1}')


In job_submit.sh line 68:
      jobstat=`/apps/torque/default/bin/qstat |grep $jobid |awk '{if($5=="R" || $5=="Q") print 1; else print 0;}'`
              ^-- SC2006: Use $(...) notation instead of legacy backticked `...`.
                                                    ^----^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
      jobstat=$(/apps/torque/default/bin/qstat |grep "$jobid" |awk '{if($5=="R" || $5=="Q") print 1; else print 0;}')

For more information:
  https://www.shellcheck.net/wiki/SC1090 -- ShellCheck can't follow non-const...
  https://www.shellcheck.net/wiki/SC2154 -- wrf_for is referenced but not ass...
  https://www.shellcheck.net/wiki/SC2086 -- Double quote to prevent globbing ...
