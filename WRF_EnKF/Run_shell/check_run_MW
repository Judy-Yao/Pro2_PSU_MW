
In run_MW.sh line 12:
source /home1/02191/yuz31/.bashrc
       ^------------------------^ SC1091: Not following: /home1/02191/yuz31/.bashrc was not specified as input (see shellcheck -x).


In run_MW.sh line 17:
. $CONFIG_FILE
  ^----------^ SC1090: ShellCheck can't follow non-constant source. Use a directive to specify location.


In run_MW.sh line 18:
. util.sh
  ^-----^ SC1091: Not following: util.sh was not specified as input (see shellcheck -x).


In run_MW.sh line 44:
  export OWMAX=$(min ${OBS_WIN_MAX[@]})
         ^---^ SC2155: Declare and assign separately to avoid masking return values.
                     ^---------------^ SC2068: Double quote array expansions to avoid re-splitting elements.


In run_MW.sh line 45:
  export OWMIN=$(min ${OBS_WIN_MIN[@]})
         ^---^ SC2155: Declare and assign separately to avoid masking return values.
                     ^---------------^ SC2068: Double quote array expansions to avoid re-splitting elements.


In run_MW.sh line 47:
  export MPS=$(min ${MINUTE_PER_SLOT[@]})
         ^-^ SC2155: Declare and assign separately to avoid masking return values.
                   ^-------------------^ SC2068: Double quote array expansions to avoid re-splitting elements.


In run_MW.sh line 48:
  export FCSTM=$(min ${FORECAST_MINUTES[@]})
         ^---^ SC2155: Declare and assign separately to avoid masking return values.
                     ^--------------------^ SC2068: Double quote array expansions to avoid re-splitting elements.


In run_MW.sh line 49:
  export CP=$(min ${CYCLE_PERIOD[@]})
         ^-- SC2155: Declare and assign separately to avoid masking return values.
                  ^----------------^ SC2068: Double quote array expansions to avoid re-splitting elements.


In run_MW.sh line 50:
  if [[ $DATE == $DATE_START ]]; then
                 ^---------^ SC2053: Quote the right-hand side of == in [[ ]] to prevent glob matching.


In run_MW.sh line 51:
    export CP=$(diff_time "$DATE" "$DATE_CYCLE_START")
           ^-- SC2155: Declare and assign separately to avoid masking return values.


In run_MW.sh line 58:
    export run_minutes_cycle=$(echo "$CP"+"$OWMAX" |bc)
           ^---------------^ SC2155: Declare and assign separately to avoid masking return values.


In run_MW.sh line 60:
      export start_date_cycle=$(advance_time "$start_date_cycle" "$OWMIN")  
             ^--------------^ SC2155: Declare and assign separately to avoid masking return values.


In run_MW.sh line 61:
      export run_minutes_cycle=$(echo "$run_minutes"+"$OWMIN" |bc)  
             ^---------------^ SC2155: Declare and assign separately to avoid masking return values.
                                       ^----------^ SC2154: run_minutes is referenced but not assigned.


In run_MW.sh line 68:
    export run_minutes_forecast=$(diff_time "$DATE" "$DATE_END")
           ^------------------^ SC2155: Declare and assign separately to avoid masking return values.


In run_MW.sh line 70:
    export run_minutes_forecast=$(max "$CP" "$FCSTM")
           ^------------------^ SC2155: Declare and assign separately to avoid masking return values.


In run_MW.sh line 75:
  export minute_off=$(echo "(${start_date_cycle:8:2}*60+${start_date_cycle:10:2})%$BC_INTERVAL" |bc)
         ^--------^ SC2155: Declare and assign separately to avoid masking return values.


In run_MW.sh line 77:
    export LBDATE=$(advance_time "$start_date_cycle" -"$minute_off")
           ^----^ SC2155: Declare and assign separately to avoid masking return values.


In run_MW.sh line 82:
  export minute_off=$(echo "(${start_date_cycle:8:2}*60+${start_date_cycle:10:2})%$FCST_INTERVAL" |bc)  
         ^--------^ SC2155: Declare and assign separately to avoid masking return values.


In run_MW.sh line 83:
  export FCSTDATE=$(advance_time "$start_date_cycle" -"$minute_off")
         ^------^ SC2155: Declare and assign separately to avoid masking return values.


In run_MW.sh line 85:
  export NEXTDATE=$(advance_time "$DATE" "$CP")
         ^------^ SC2155: Declare and assign separately to avoid masking return values.


In run_MW.sh line 92:
  for d in $(ls run/"$DATE"/); do  
           ^----------------^ SC2045: Iterating over ls output is fragile. Use globs.


In run_MW.sh line 134:
  for d in $(ls -t run/"$DATE"/); do
           ^-------------------^ SC2045: Iterating over ls output is fragile. Use globs.

For more information:
  https://www.shellcheck.net/wiki/SC2045 -- Iterating over ls output is fragi...
  https://www.shellcheck.net/wiki/SC2068 -- Double quote array expansions to ...
  https://www.shellcheck.net/wiki/SC1090 -- ShellCheck can't follow non-const...
